<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="templateApp" default="build">

	<!-- Definitions of variables used during the rest of this script -->

	<property file="build.properties"/>
	<property name="build.dir" value="${basedir}/build"/>
	<property name="build.classes.dir" value="${build.dir}/classes"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="dist.dir" value="${build.dir}/jar"/>
	<property name="conf.dir" value="${basedir}/etc"/>
	<property name="doc.dir" value="${build.dir}/doc"/>
	<property name="test.reports.dir" value="${build.dir}/reports/"/>
	

	<!-- Definitions of classpath variants used for different tasks -->

	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="test.classpath">
		<pathelement location="${build.classes.dir}"/>
		<!-- configuration -->
		<pathelement location="${conf.dir}"/>
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	

	<!-- Definitions of runnable ant targets.
         Run them from the command line by executing "ant [targetname]"  -->

    <target name="run">

        <loadproperties srcFile="version.properties"/>

        <property 
            name="new.build.number" 
            value="${build.major.number}.${build.minor.number}.${build.revision.number}"
        />

        <propertyfile file="version.properties">
            <entry key="build.number" value="${new.build.number}"/>
        </propertyfile>
    </target>

    <target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.teamthundercats.Intro" classpathref="test.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>

	<target name="build" description="Build the system">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<javac
            srcdir="${src.dir}"
            destdir="${build.classes.dir}"
            debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.7"
            source="1.7"
			includeantruntime="false">
			<classpath refid="compile.classpath"/>
		</javac>
		


	</target>
	
	<target name="dist" description="generate the distribution" >
	    <!-- Create the distribution directory -->
	    <mkdir dir="${dist.dir}"/>

	    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<mkdir dir="${build}"/>
	    <jar jarfile="${dist.dir}/ThunderCats.jar" basedir="${build}"/>
		
		<propertyfile file="version.properties">
		            <entry key="build.revision.number" type="int" operation="+" value="1"/>
		        </propertyfile>

		        <loadproperties srcFile="version.properties"/>

		        <property 
		            name="new.build.number" 
		            value="${build.major.number}.${build.minor.number}.${build.revision.number}"
		        />

		        <propertyfile file="version.properties">
		            <entry key="build.number" value="${new.build.number}"/>
		        </propertyfile>

	</target>
	
	
	
	

	<!-- Build internal documentation -->
	<target name="javadoc" description="Build internal documentation">
		<mkdir dir="${doc.dir}"/>
		<javadoc destdir="${doc.dir}" classpathref="compile.classpath">
			<fileset dir="${src.dir}" includes="**/*.java"/>
		</javadoc>
	</target>

	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}"/>
	</target>
	
	<!-- Making a commit and pushing the changes -->
		
	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<attribute name="name" default="" />
		<element name="args" optional="true" />
		<sequential>
			<echo message="git @{command}" />
			<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args/>
			</exec>
		</sequential>
	</macrodef>
		
	
	<target name="git_commit" description="Making a commit and pushing the changes">
		<input message="Your comment for commit" addproperty="commit-comment" />
			
			
		<echo message="Commiting all changes with message ${commit-comment}" />
		<git command="add">
			<args>
				<arg value="-A" />
			</args>
		</git>
			

			
		<git command="commit">
			<args>
				<arg value="-m ${commit-comment}" />
			</args>

		</git>
			
			
			
		<git command="config">
			<args>
				<arg value="--global" />
				<arg value="push.default" />
				<arg value="simple" />
			</args>
				
		</git>
			
		<git command="remote">
			<args>
				<arg value="-v" />
			</args>
				
		</git>
			
		<git command="remote">
			<args>
				<arg value="remove" />
				<arg value="origin" />
			</args>
				
		</git>
			
		<git command="remote">
			<args>
				<arg value="add" />
				<arg value="origin" />
				<arg value="https://github.com/Rindens/TeamThunderCats.git" />
			</args>
				
		</git>
			
			
		<git command="push">
			<args>
				<arg value="-u" />
				<arg value="origin" />
				<arg value="master" />
			</args>
				
		</git>
				
			
	</target>
	
	
	<!-- Creating a tag -->
	
	<target name="git_tag" description="Creating a tag">
		<input message="Tag name" addproperty="tag-name" />
		
		
		<echo message="Tag name is ${tag-name}" />
		
		<git command="tag">
			<args>
				<arg value="-d" />
				<arg value="homework_4" />
			</args>
		</git>
		
		<git command="tag">
			<args>
				<arg value="-a" />
				<arg value="homework_4" />
				<arg value="-m" />
				<arg value="${tag-name}" />
			</args>
		</git>
		
		
		<git command="config">
			<args>
				<arg value="--global" />
				<arg value="push.default" />
				<arg value="simple" />
			</args>
			
		</git>
		
		<git command="remote">
			<args>
				<arg value="-v" />
			</args>
			
		</git>
		
		<git command="remote">
			<args>
				<arg value="remove" />
				<arg value="origin" />
			</args>
			
		</git>
		
		<git command="remote">
			<args>
				<arg value="add" />
				<arg value="origin" />
				<arg value="https://github.com/Rindens/TeamThunderCats.git" />
			</args>
			
		</git>
		
		
		<git command="push">
			<args>
				<arg value="--tags" />
			</args>
			
		</git>
			
		
	</target>


</project>



